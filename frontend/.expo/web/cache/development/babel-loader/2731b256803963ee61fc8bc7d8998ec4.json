{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { USERS_DATA_STATE_CHANGE, USERS_POSTS_STATE_CHANGE, CLEAR_DATA } from \"../constants\";\nvar initialState = {\n  users: [],\n  feed: [],\n  usersFollowingLoaded: 0\n};\nexport var users = function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USERS_DATA_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: [].concat(_toConsumableArray(state.users), [action.user])\n      });\n\n    case USERS_POSTS_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        usersFollowingLoaded: state.usersFollowingLoaded + 1,\n        feed: [].concat(_toConsumableArray(state.feed), _toConsumableArray(action.posts))\n      });\n\n    case USERS_LIKES_STATE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        feed: state.feed.map(function (post) {\n          return post.id == action.postId ? _objectSpread(_objectSpread({}, post), {}, {\n            currentUserLike: action.currentUserLike\n          }) : post;\n        })\n      });\n\n    case CLEAR_DATA:\n      return initialState;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/shrut/instagram/frontend/redux/reducers/users.js"],"names":["USERS_DATA_STATE_CHANGE","USERS_POSTS_STATE_CHANGE","CLEAR_DATA","initialState","users","feed","usersFollowingLoaded","state","action","type","user","posts","USERS_LIKES_STATE_CHANGE","map","post","id","postId","currentUserLike"],"mappings":";;;;;;;AAAA,SAASA,uBAAT,EAAkCC,wBAAlC,EAA2DC,UAA3D;AACA,IAAMC,YAAY,GAAC;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,IAAI,EAAC,EAFU;AAGfC,EAAAA,oBAAoB,EAAE;AAHP,CAAnB;AAKA,OAAO,IAAMF,KAAK,GAAE,SAAPA,KAAO,GACpB;AAAA,MADqBG,KACrB,uEAD2BJ,YAC3B;AAAA,MADwCK,MACxC;;AACI,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,uBAAL;AACI,6CACOO,KADP;AAEIH,QAAAA,KAAK,+BAAKG,KAAK,CAACH,KAAX,IAAiBI,MAAM,CAACE,IAAxB;AAFT;;AAIJ,SAAKT,wBAAL;AACI,6CACWM,KADX;AAEQD,QAAAA,oBAAoB,EAAEC,KAAK,CAACD,oBAAN,GAA6B,CAF3D;AAIQD,QAAAA,IAAI,+BAAOE,KAAK,CAACF,IAAb,sBAAqBG,MAAM,CAACG,KAA5B;AAJZ;;AAMJ,SAAKC,wBAAL;AACI,6CACOL,KADP;AAEIF,QAAAA,IAAI,EAAGE,KAAK,CAACF,IAAN,CAAWQ,GAAX,CAAe,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,IAAWP,MAAM,CAACQ,MAAlB,mCACtBF,IADsB;AACjBG,YAAAA,eAAe,EAAET,MAAM,CAACS;AADP,eAE1BH,IAFsB;AAAA,SAAnB;AAFX;;AAMJ,SAAKZ,UAAL;AACI,aAAOC,YAAP;;AAGJ;AACI,aAAOI,KAAP;AAzBR;AA4BH,CA9BM","sourcesContent":["import { USERS_DATA_STATE_CHANGE, USERS_POSTS_STATE_CHANGE,CLEAR_DATA } from \"../constants\"\r\nconst initialState={\r\n    users: [],\r\n    feed:[],\r\n    usersFollowingLoaded: 0,\r\n}\r\nexport const users =(state=initialState,action)=>\r\n{\r\n    switch(action.type){\r\n        case USERS_DATA_STATE_CHANGE:\r\n            return {\r\n                ...state,\r\n                users:[...state.users,action.user] \r\n            }\r\n        case USERS_POSTS_STATE_CHANGE:\r\n            return {\r\n                    ...state,\r\n                    usersFollowingLoaded: state.usersFollowingLoaded + 1,\r\n                  \r\n                    feed : [...state.feed,...action.posts]\r\n            }\r\n        case USERS_LIKES_STATE_CHANGE:\r\n            return {\r\n                ...state,\r\n                feed : state.feed.map(post => post.id == action.postId ?\r\n                    {...post,currentUserLike: action.currentUserLike}:\r\n                    post)\r\n        }\r\n        case CLEAR_DATA:\r\n            return initialState\r\n                    \r\n                \r\n        default:\r\n            return state;\r\n    }\r\n   \r\n}"]},"metadata":{},"sourceType":"module"}