{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrut\\\\instagram\\\\frontend\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { bindactionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\nvar Tab = createBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.clearData();\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchUserFollowing();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearcScreen,\n        navigation: this.props.navigation,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"magnify\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref5) {\n          var navigation = _ref5.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth.currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchuser: fetchuser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFollowing: fetchUserFollowing,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["C:/Users/shrut/instagram/frontend/components/Main.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialCommunityIcons","firebase","connect","bindactionCreators","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","FeedScreen","ProfileScreen","SearchScreen","Tab","createBottomTabNavigator","EmptyScreen","Main","props","tabBarIcon","color","size","SearcScreen","navigation","tabPress","event","preventDefault","navigate","uid","auth","currentUser","mapStateToProps","store","userState","mapDispatchProps","dispatch","bindActionCreators","fetchuser"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\r\nimport {View,Text} from 'react-native'\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\nimport firebase from 'firebase'\r\n\r\nimport {connect} from 'react-redux'\r\nimport { bindactionCreators } from 'redux'\r\nimport { fetchUser,fetchUserPosts,fetchUserFollowing,clearData} from '../redux/actions/index' \r\n\r\nimport FeedScreen from './main/Feed'\r\nimport ProfileScreen from './main/Profile'\r\nimport SearchScreen from './main/Search'\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst EmptyScreen= () => {\r\n    return(null)\r\n}\r\n\r\nexport class Main extends Component{\r\n    componentDidMount(){\r\n        this.props.clearData();\r\n        this.props.fetchUser();\r\n        this.props.fetchUserPosts();\r\n        this.props.fetchUserFollowing();\r\n\r\n    }\r\n    render () {\r\n\r\n        return (\r\n            <Tab.Navigator initialRouteName=\"Feed\" labeled={false}>\r\n                <Tab.Screen name=\"Feed\" component={FeedScreen} \r\n                options={{\r\n                    tabBarIcon: ({ color,size }) => (\r\n                        <MaterialCommunityIcons name=\"home\" color={color} size={26}/>\r\n                    ),\r\n\r\n                }} />\r\n                 <Tab.Screen name=\"Search\" component={SearcScreen} navigation={this.props.navigation}\r\n                options={{\r\n                    tabBarIcon: ({ color,size }) => (\r\n                        <MaterialCommunityIcons name=\"magnify\" color={color} size={26}/>\r\n                    ),\r\n\r\n                }} />\r\n                <Tab.Screen name=\"AddContainer\" component={EmptyScreen} \r\n                  listeners={({navigation}) => ({\r\n                      tabPress: event => {\r\n                          event.preventDefault();\r\n                          navigation.navigate(\"Add\")\r\n                      }\r\n                  })}\r\n                options={{\r\n                    tabBarIcon: ({ color,size }) => (\r\n                        <MaterialCommunityIcons name=\"plus-box\" color={color} size={26}/>\r\n                    ),\r\n\r\n                }} />\r\n                <Tab.Screen name=\"Profile\" component={ProfileScreen} \r\n                listeners={({navigation}) => ({\r\n                    tabPress: event => {\r\n                        event.preventDefault();\r\n                        navigation.navigate(\"Profile\",{uid: firebase.auth.currentUser.uid})\r\n                    }})}\r\n                \r\n                options={{\r\n                    tabBarIcon: ({ color,size }) => (\r\n                        <MaterialCommunityIcons name=\"account-circle\" color={color} size={26}/>\r\n                    ),\r\n\r\n                }} />\r\n               \r\n            </Tab.Navigator>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>({\r\n    currentUser: store.userState.currentUser\r\n})\r\nconst mapDispatchProps=(dispatch)=>bindActionCreators({fetchuser,fetchUserPosts,fetchUserFollowing,clearData},dispatch)\r\nexport default connect(mapStateToProps,mapDispatchProps)(Main);"]},"metadata":{},"sourceType":"module"}