{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrut\\\\instagram\\\\frontend\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return React.createElement(Tab.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n}\n\nimport * as firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAvpNrMwmoxPEJ8GxOCOxVrYt5jIT7vkOU\",\n  authDomain: \"instagram-dev-9908b.firebaseapp.com\",\n  projectId: \"instagram-dev-9908b\",\n  storageBucket: \"instagram-dev-9908b.appspot.com\",\n  messagingSenderId: \"582613719046\",\n  appId: \"1:582613719046:web:10a5044cce24994ec70b87\",\n  measurementId: \"G-BR4LHSP0JW\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./Components/auth/Landing\";\nimport RegisterScreen from \"./Components/auth/Register\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nimport CommentScreen from \"./components/main/Comment\";\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Comment\",\n        component: CommentScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["C:/Users/shrut/instagram/frontend/App.js"],"names":["StatusBar","React","component","Tab","createBottomTabNavigator","MyTabs","HomeScreen","SettingsScreen","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","NavigationContainer","createStackNavigator","LandingScreen","RegisterScreen","MainScreen","AddScreen","SaveScreen","CommentScreen","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown","navigation","Component"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{component} from 'react';\nimport {View,Text} from 'react-native'\n\n\n\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n    </Tab.Navigator>\n  );\n}\n\n\n\nimport * as firebase from 'firebase'\n\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware} from 'redux'\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\nconst store= createStore(rootReducer,applyMiddleware(thunk))\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAvpNrMwmoxPEJ8GxOCOxVrYt5jIT7vkOU\",\n  authDomain: \"instagram-dev-9908b.firebaseapp.com\",\n  projectId: \"instagram-dev-9908b\",\n  storageBucket: \"instagram-dev-9908b.appspot.com\",\n  messagingSenderId: \"582613719046\",\n  appId: \"1:582613719046:web:10a5044cce24994ec70b87\",\n  measurementId: \"G-BR4LHSP0JW\"\n};\n\nif(firebase.apps.length === 0)\n{\n  firebase.initializeApp(firebaseConfig)\n}\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport LandingScreen from './Components/auth/Landing'\nimport RegisterScreen from './Components/auth/Register'\nimport MainScreen from './components/Main'\nimport AddScreen from './components/main/Add'\nimport SaveScreen from './components/main/Save'\nimport CommentScreen from './components/main/Comment'\n\n\n\nconst Stack = createStackNavigator();\n\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      loaded: false,\n    }\n  }\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged((user) =>{\n      if(!user){\n        this.setState({\n          loggedIn:false,\n          loaded:true,\n        })\n      }\n      else{\n        this.setState({\n          loggedIn:true,\n          loaded:true,\n        })\n\n      }\n    })\n  }\n  render() {\n    const {loggedIn,loaded} = this.state;\n    if(!loaded){\n      return(\n        <View style={{flex:1,justifyContent: 'center'}}>\n          <Text>Loading</Text>\n        </View>\n      )\n    }\n    if(!loggedIn){\n      return (\n        <NavigationContainer>\n        <Stack.Navigator initialRouteName=\"Landing\">\n          <Stack.Screen name=\"Landing\" component={LandingScreen} options={ {headerShown: false}}/>\n          <Stack.Screen name=\"Register\" component={RegisterScreen}/>\n        </Stack.Navigator>\n      \n    </NavigationContainer>\n      );\n\n    }\n    return(\n      <Provider store={store}>\n        <NavigationContainer>\n         <Stack.Navigator initialRouteName=\"Main\">\n          <Stack.Screen name=\"Main\" component={MainScreen} options={ {headerShown: false}}/>\n          <Stack.Screen name=\"Add\" component={AddScreen} navigation={this.props.navigation}/>\n          <Stack.Screen name=\"Save\" component={SaveScreen} navigation={this.props.navigation}/>\n          <Stack.Screen name=\"Comment\" component={CommentScreen} navigation={this.props.navigation}/>\n          \n        </Stack.Navigator>\n        </NavigationContainer>\n        \n      </Provider>\n      \n      \n    )\n   \n  }\n}\n\nexport default App\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}