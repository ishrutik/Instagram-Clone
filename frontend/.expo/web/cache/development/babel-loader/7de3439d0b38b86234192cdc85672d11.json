{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrut\\\\instagram\\\\frontend\\\\components\\\\main\\\\Save.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nexport default function Save(props, _ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      caption = _useState2[0],\n      setCaption = _useState2[1];\n\n  var uploadImage = function uploadImage() {\n    var uri, childpath, response, blob, task;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = props.route.params.image;\n            childpath = \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            console.log(childPath);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 8:\n            blob = _context.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var taskProgress = function taskProgress(snapshot) {\n    console.log('transferred: ${snapshot.bytesTransferred}');\n  };\n\n  var taskCompleted = function taskCompleted() {\n    task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n      savePostData(snapshot);\n      console.log(snapshot);\n    });\n  };\n\n  var taskError = function taskError(snapshot) {\n    console.log(snapshot);\n  };\n\n  task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n  var savePostData = function savePostData(downloadURL) {\n    firebase.firestore().collection('posts').doc(firebase.auth().currentUser.uid).collection(\"userPosts\").add({\n      downloadURL: downloadURL,\n      caption: caption,\n      likesCount: 0,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      navigation.popToTop();\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.route.params.image\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Write a caption...\",\n    onChangeText: function onChangeText(caption) {\n      return setCaption(caption);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Save\",\n    onPress: function onPress() {\n      return uploadImage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/shrut/instagram/frontend/components/main/Save.js"],"names":["React","useState","firebase","require","Save","props","navigation","caption","setCaption","uploadImage","uri","route","params","image","childpath","auth","currentUser","uid","Math","random","toString","console","log","childPath","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","taskCompleted","getDownloadURL","then","savePostData","taskError","on","downloadURL","firestore","collection","doc","add","likesCount","creation","FieldValue","serverTimestamp","popToTop","flex"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport {View,TextInput,Image,Button} from 'react-native'\r\nimport firebase from 'firebase'\r\nrequire(\"firebase/firestore\")\r\nrequire(\"firebase/firebase-storage\")\r\nexport default function Save(props,{navigation}) {\r\n    const [caption,setCaption]= useState(\"\")\r\n    const uploadImage = async() => {\r\n        const uri = props.route.params.image;\r\n        const childpath = `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`;\r\n        console.log(childPath)\r\n        const response = await fetch(uri);\r\n        const blob = await response.blob();\r\n\r\n        const task = firebase\r\n              .storage()\r\n              .ref()\r\n              .child(childPath)\r\n              .put(blob);\r\n    }\r\n\r\n    const taskProgress = snapshot => {\r\n        console.log('transferred: ${snapshot.bytesTransferred}')\r\n    }\r\n\r\n    const taskCompleted = () => {\r\n        task.snapshot.ref.getDownloadURL().then((snapshot) => {\r\n            savePostData(snapshot);\r\n            console.log(snapshot)\r\n        })\r\n    }\r\n\r\n    const taskError = snapshot => {\r\n        console.log(snapshot)\r\n    }\r\n\r\n    task.on(\"state_changed\",taskProgress,taskError,taskCompleted)\r\n\r\n    const savePostData = (downloadURL) => {\r\n        firebase.firestore()\r\n                .collection('posts')\r\n                .doc(firebase.auth().currentUser.uid)\r\n                .collection(\"userPosts\")\r\n                .add({\r\n                    downloadURL,\r\n                    caption,\r\n                    likesCount:0,\r\n                    creation: firebase.firestore.FieldValue.serverTimestamp()\r\n                }).then((function () {\r\n                    navigation.popToTop()\r\n                }))\r\n    }\r\n    \r\n    return (\r\n        <View style={{flex: 1}}>\r\n            <Image source={{uri: props.route.params.image}}/>\r\n            <TextInput\r\n                placeholder=\"Write a caption...\"\r\n                onChangeText={(caption)=> setCaption(caption)}\r\n            />\r\n            <Button title=\"Save\" onPress={() => uploadImage()}/>\r\n            \r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}